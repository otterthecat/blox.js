/*! Blox JS - v0.1.0 - 2013-05-27
* https://github.com/otterthecat/blox.js
* Copyright (c) 2013 Otter the Cat; Licensed MIT, GPL */
(function(){var s=function(s,e){var t=document.createElement("script");t.type="text/javascript",t.src=s,t.onload=function(){e.fn.call(e.scope,e.arg)},document.getElementsByTagName("body")[0].appendChild(t)},e=function(s){this.document=window.document,this.includes={},this.funcs={},this.args={},this.vars={},this.config={devMode:!0,scripts:[],preventVarOverride:!0},this.subscribers={},this.testables=[],this.utils={merge:function(s,e){for(var t in e)"merge"!==t?s[t]=e[t]:this.dbug("warn","[merge] is not replaceable in blox, ignoring %o",t);return s},assert:function(s){return this.config.devMode?(this.dbug("warn","Assert ["+s.namespace+"]: "+s.testValue+" === "+s.assertValue),s.testValue===s.assertValue?(this.dbug("info","PASS : "+s.testValue+" === "+s.assertValue),!0):(this.dbug("error","FAIL : "+s.testValue+" !== "+s.assertValue),!1)):null}},this.init(s)};e.prototype={init:function(s){return"object"==typeof s&&this.utils.merge(this.config,s),this},setUtils:function(s){var e=this.utils;return e.merge(e,s),this},launch:function(){var s=this;this.document.addEventListener?this.document.addEventListener("DOMContentLoaded",function(){return s.exec()},!1):window.onload=function(){return s.exec()}},exec:function(e){if(e)return this.funcs.hasOwnProperty(e)?(this.funcs[e](this.args[e]||void 0),this):(this.dbug("warn","BLOX does not have requested namespace [%s].",e),!1);if(!this.config.devMode)for(var t in this.funcs)if(this.includes.hasOwnProperty(t)&&"string"==typeof this.includes[t]){var i=this;s(this.includes[t],{fn:i.funcs[t],scope:i,arg:i.args[t]||void 0})}else this.funcs[t].call(this,this.args[t]||void 0);if(this.config.devMode)for(var n=this.testables,r=0;n.length>r;r++){var a=n[r];"string"==typeof a.inc&&a.inc.length>0?s(a.inc,{fn:this.utils.assert,scope:this,arg:{namespace:a.namespace,testValue:a.fn.call(this),assertValue:"function"==typeof a.assert?a.assert():a.assert}}):this.utils.assert({namespace:a.namespace,testValue:a.fn.call(this),assertValue:"function"==typeof a.assert?a.assert():a.assert})}return this},v:function(s,e){return"string"==typeof s&&e!==void 0?(this.vars.hasOwnProperty(s)||(this.vars[s]=e),this):"string"==typeof s&&e===void 0?this.vars[s]:"object"==typeof s?(this.vars.hasOwnProperty(s.name)||(this.vars[s.name]=s.value),this):void 0},add:function(s){var e=this.testables;return this.funcs.hasOwnProperty(s.namespace)||void 0===s.arg?this.funcs.hasOwnProperty(s.namespace)?(this.dbug("error","BLOX already contains namespace [%s].",s.namespace),!1):(this.funcs[s.namespace]=s.fn,this.includes[s.namespace]=s.inc,e.push({inc:s.inc,namespace:s.namespace,fn:s.fn,assert:s.assert}),this):(this.funcs[s.namespace]=s.fn,this.args[s.namespace]=s.arg,this.includes[s.namespace]=s.inc,this)},remove:function(s){return delete this.funcs[s],delete this.args[s],this},subscribe:function(s,e){return this.subscribers[s]||(this.subscribers[s]=[]),this.subscribers[s].push(e),this},unsubscribe:function(s,e){for(var t=0;this.subscribers[s].length>t;t++)this.subscribers[s][t]===e&&this.subscribers[s].splice(t,1);return this},publish:function(s,e){for(var t in this.subscribers[s])this.subscribers[s][t](e||void 0);return this},dbug:function(s,e,t){if(!window.console||!this.config.devMode)return this;switch(s){case"info":window.console.info(e,t||void 0);break;case"log":window.console.log(e,t||void 0);break;case"warn":window.console.warn(e,t||void 0);break;case"error":window.console.error(e,t||void 0),window.console.log("+++ Start Stack Trace +++"),window.console.trace(),window.console.log("+++ End Stack Trace +++");break;default:window.console.error('DOH! BLOX.dbug passed unavailable level [%s]. Try "info", "log", "warn" or "error"',s)}return this}},window.BLOX=e})();